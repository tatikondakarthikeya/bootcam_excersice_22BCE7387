# -*- coding: utf-8 -*-
"""ass_bootcamp_22BCE7387.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WJ7uGevvRxCpX_nrITWRP2Kny9xID40J

**Exersises**

**1. What is 7 to the power of 4?**
"""

ans = 7**4
print(ans)

"""**2. Split the given string.**
**s = "Hi there Sam!"** into a list.
"""

s = "Hi there Sam!"
split = s.split()
print(split)

"""**3. Given the variables: planet = "Earth", diameter = 12742. Use .format() to print the following string: The diameter of Earth is 12742 kilometers.**"""

planet = "Earth"
diameter = 12742
final_string = ("The diameter of {} is {} kilometers".format(planet, diameter))
print(final_string)

"""**4. Given this nested list, use indexing to grab the word "hello"**

**lst = [1,2,[3,4],[5,[100,200,['hello']],23,11],1,7]**
"""

lst = [1,2,[3,4],[5,[100,200,['hello']],23,11],1,7]
index_hello = lst[3][1][2][0]
print(index_hello)

"""**5. Given this nested dictionary grab the word "hello". Be prapred, this will be annoying/tricky**

d = {'k1':[1,2,3,{'tricky':['oh', 'man'.'inception',{'target':[1,2,3,'hello']}]}]}
"""

d = {'k1':[1,2,3,{'tricky':['oh','man','inception',{'target':[1,2,3,'hello']}]}]}
index_hello = d['k1'][3]['tricky'][3]['target'][3]
print(index_hello)

"""**6. What is the main difference between a tuple and a list?**"""

lst = [1,2,3,4]
print("original list = ", lst)
lst[0] = 5
print("new list = ", lst)
tpl = (1,2,3,4)
print("tuple = ", tpl)
# Tuple is immutable, ie, values cannot be changed

"""**7. Create a function that grabs the email website domain from a string in the form: user@domain.com**"""

def get_email_domain(email):
  divide = email.split('@')
  if len(divide) == 2:
    return divide[1]
email_address = "user@domain.com"
domain = get_email_domain(email_address)
print(f"The domain of the email '{email_address}' is: {domain}")

"""**8. Create a basic function that returns True if the wird 'dog' is contained in the input string.**
 **Don't worry about edge cases like a punctuation being attached to the word dog, but do account for capitalization.**
"""

input = 'Is there a dog here?'
if 'dog' in input:
  print(True)
else:
  print(False)

"""**9. Create a function that counts the number of times the word "dog" occurs in a string.**"""

def dog_occurances_count(input):
  words = input.lower().split()
  dog_count = words.count('dog')
  return dog_count
input = 'This dog runs faster than the other dog dude!'
occurances = dog_occurances_count(input)
print(f"Given sentence contains the word 'dog' for {occurances} times")

"""**10. Use lambda expressions and filter() function to filter out words from a list that don't strat with the letter 's'.**"""

seq = ['soup','dog','salad','cat','great']
required_seq = list(filter(lambda word: word.startswith('s'), seq))
print(required_seq)

"""**Final Problem**

You are driving a little too fast, and a police officer stops you. Write a function to return one of 3 possible results: "No ticket", "Small ticket", or "Big ticket". If your speed is 60 or less, the result is "No ticket". If speed is between 61 and 80 (both inclusive), the result is "Small ticket". If the speed is 81 or more, "Big ticket". Unless it is your birthday (encoded as a boolean value in the parameters of the function) on your birthday your speed can be 5 higher in all cases.
"""

def speed_caught(speed, is_birthday):
    if is_birthday:
        speed += 5
    if speed <= 60:
        return "No ticket"
    elif 61 <= speed <= 80:
        return "Small ticket"
    else:
        return "Big ticket"
birthday = True
your_speed = 70
result = speed_caught(your_speed, birthday)
print(result)
birthday = False
your_speed = 70
result = speed_caught(your_speed, birthday)
print(result)